@model LocalScout.ViewModels.CategoryServicesViewModel

@{
    ViewData["Title"] = $"Services in {Model.CategoryName}";
}

<div class="container my-5">
    <h1 class="display-5">@Model.CategoryName</h1>
    <p class="lead">Browse all available services in this category.</p>
    <hr />

    @if (!Model.Services.Any())
    {
        <div class="text-center py-5">
            <h3>No Services Found</h3>
            <p>There are currently no providers offering services in this category.</p>
            <a asp-action="Index" class="btn btn-primary mt-3">Back to Homepage</a>
        </div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-4" id="services-grid">
            <partial name="_ServiceGridPartial" model="Model.Services" />
        </div>

        <div id="load-more-container" class="text-center mt-4">
            @if (ViewBag.HasMorePages)
            {
                <button id="load-more-btn" class="btn btn-primary" data-category-id="@ViewContext.RouteData.Values["id"]"
                    data-next-cursor="@ViewBag.LastDocumentId">
                    Load More
                </button>
            }
            <div id="loading-spinner" class="spinner-border" role="status" style="display: none;">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const loadMoreBtn = document.getElementById('load-more-btn');
            if (!loadMoreBtn) return;

            const servicesGrid = document.getElementById('services-grid');
            const loadingSpinner = document.getElementById('loading-spinner');

            loadMoreBtn.addEventListener('click', async function () {
                loadingSpinner.style.display = 'block';
                this.style.display = 'none';

                const categoryId = this.getAttribute('data-category-id');
                const nextCursor = this.getAttribute('data-next-cursor');
                const url = `/Home/LoadMoreCategoryServices?categoryId=${categoryId}&lastDocumentId=${nextCursor}`;

                // (The rest of the script is identical to the Index.cshtml script)
                try {
                    const response = await fetch(url);
                    if (response.ok) {
                        const html = await response.text();
                        servicesGrid.insertAdjacentHTML('beforeend', html);

                        const hasMorePages = response.headers.get('X-Has-More-Pages') === 'True';
                        const newNextCursor = response.headers.get('X-Last-Document-Id');

                        if (hasMorePages) {
                            this.setAttribute('data-next-cursor', newNextCursor);
                            this.style.display = 'block';
                        }
                    }
                } catch (error) {
                    console.error('Error fetching more services:', error);
                    this.style.display = 'block';
                } finally {
                    loadingSpinner.style.display = 'none';
                }
            });
        });
    </script>
}