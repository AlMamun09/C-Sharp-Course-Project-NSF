@model LocalScout.ViewModels.HomeViewModel

@{
    ViewData["Title"] = "Find Local Services";
}

<!-- Section 1: Hero with Search Bar -->
<div class="container text-center my-5">
    <h1 class="display-4 fw-bold">Find the Perfect Local Pro</h1>
    <p class="lead mb-4">Get help with any project, from home repairs to custom work.</p>
    <div class="row justify-content-center">
        <div class="col-md-8">
            <form asp-controller="Home" asp-action="Search" method="get" class="d-flex">
                <input type="search" name="query" class="form-control form-control-lg me-2"
                    placeholder="What service do you need today?" aria-label="Search">
                <button class="btn btn-primary btn-lg" type="submit">Search</button>
            </form>
        </div>
    </div>
</div>

<!-- Section 2: Interactive Service Categories Scroller (New Design) -->
<div class="container my-5">
    <h2 class="text-center mb-4">Browse by Category</h2>
    <div class="category-scroller-wrapper">
        <div class="category-scroller" id="category-scroller">
            <div class="category-track">
                @foreach (var category in Model.Categories)
                {
                    <a asp-action="ServicesByCategory" asp-route-id="@category.Id" class="visual-category-card">
                        <div class="card-title-overlay">
                            <h5>@category.Name</h5>
                        </div>
                        <div class="card-image-container">
                            <img src="@(string.IsNullOrEmpty(category.ImageUrl) ? "https://placehold.co/400x300/003554/FFF?text=Service" : category.ImageUrl)"
                                class="card-image" alt="@category.Name">
                        </div>
                    </a>
                }
            </div>
        </div>
        <button class="scroll-btn left" id="scroll-left">‹</button>
        <button class="scroll-btn right" id="scroll-right">›</button>
    </div>
</div>


<!-- Section 3: Featured Services -->
<div class="container my-5">
    <h2 class="text-center mb-4">Featured Services</h2>
    <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-4" id="services-grid">
        <partial name="_ServiceGridPartial" model="Model.FeaturedServices" />
    </div>

    <div id="load-more-container" class="text-center mt-4">
        @if (ViewBag.HasMorePages)
        {
            <button id="load-more-btn" class="btn btn-primary" data-next-cursor="@ViewBag.LastDocumentId">
                Load More
            </button>
        }
        <div id="loading-spinner" class="spinner-border" role="status" style="display: none;">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // --- CATEGORY SCROLLER SCRIPT (Your existing code) ---
            const scroller = document.getElementById('category-scroller');
            const scrollLeftBtn = document.getElementById('scroll-left');
            const scrollRightBtn = document.getElementById('scroll-right');
            const cardWidth = 250 + 24; // Card width (250px) + gap (1.5rem = 24px)
            let autoScrollInterval;

            function scrollRight() {
                if (scroller.scrollLeft + scroller.clientWidth >= scroller.scrollWidth - 1) {
                    scroller.scrollLeft = 0;
                } else {
                    scroller.scrollLeft += cardWidth;
                }
            }

            function startAutoScroll() {
                autoScrollInterval = setInterval(scrollRight, 3000); // Scroll every 3 seconds
            }

            function stopAutoScroll() {
                clearInterval(autoScrollInterval);
            }

            scrollLeftBtn.addEventListener('click', () => {
                scroller.scrollLeft -= cardWidth;
            });

            scrollRightBtn.addEventListener('click', scrollRight);

            scroller.addEventListener('mouseenter', stopAutoScroll);
            scroller.addEventListener('mouseleave', startAutoScroll);

            startAutoScroll();

            // --- "LOAD MORE" SCRIPT (The new code) ---
            const loadMoreBtn = document.getElementById('load-more-btn');
            if (!loadMoreBtn) return;

            const servicesGrid = document.getElementById('services-grid');
            const loadingSpinner = document.getElementById('loading-spinner');

            loadMoreBtn.addEventListener('click', async function () {
                loadingSpinner.style.display = 'block';
                this.style.display = 'none';

                const nextCursor = this.getAttribute('data-next-cursor');
                const url = `/Home/LoadMoreIndexServices?lastDocumentId=${nextCursor}`;

                try {
                    const response = await fetch(url);
                    if (response.ok) {
                        const html = await response.text();
                        servicesGrid.insertAdjacentHTML('beforeend', html);

                        const hasMorePages = response.headers.get('X-Has-More-Pages') === 'True';
                        const newNextCursor = response.headers.get('X-Last-Document-Id');

                        if (hasMorePages) {
                            this.setAttribute('data-next-cursor', newNextCursor);
                            this.style.display = 'block';
                        }
                    }
                } catch (error) {
                    console.error('Error fetching more services:', error);
                    this.style.display = 'block';
                } finally {
                    loadingSpinner.style.display = 'none';
                }
            });
        });
    </script>
}